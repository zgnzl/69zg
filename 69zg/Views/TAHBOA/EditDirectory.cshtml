@model _69zg.Models.C_directories
@{ Layout = null;}
@using (Html.BeginForm("UpdateDirectory", "TAHBOA", FormMethod.Get, new { target = "upd" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>修改名录</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.id)

        <div class="form-group">
            @Html.LabelFor(model => model.type, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.type, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.type, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.source, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.source, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.source, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.code, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.code, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.code, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.explain, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.explain, new { @class = "form-control", @style= "height:60px;width:600px" } )
                @Html.ValidationMessageFor(model => model.explain, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.character, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.character, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.character, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.other, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.other, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.other, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="保存" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    <a href="javascript:void(0)" onclick="linkliselelct('ListDirectory')">返回</a>
</div>
