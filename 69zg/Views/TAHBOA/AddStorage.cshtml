@model _69zg.Models.仓库记录
@{ Layout = null;}
@using (Html.BeginForm("AddStorage", "tahboa", FormMethod.Post, new { @target = "add" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>仓库记录</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.type, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.type, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.type, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.source, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.source, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.source, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.explain, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.explain, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.explain, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.仓库转移类别, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.仓库转移类别, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.仓库转移类别, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.入仓库时间, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.入仓库时间, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.入仓库时间, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.出仓库时间, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.出仓库时间, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.出仓库时间, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.转移出去时间, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.转移出去时间, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.转移出去时间, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.转移连单编号, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.转移连单编号, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.转移连单编号, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.来源企业名称, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.来源企业名称, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.来源企业名称, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.转移到企业名称, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.转移到企业名称, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.转移到企业名称, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.登记人, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.登记人, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.登记人, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.登记日志, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.登记日志, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.登记日志, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.车辆情况, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.车辆情况, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.车辆情况, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.车辆照片, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.车辆照片, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.车辆照片, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.数量, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.数量, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.数量, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.数量单位, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.数量单位, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.数量单位, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.存储位置, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.存储位置, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.存储位置, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ohter, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ohter, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ohter, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="保存" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    <a href="javascript:void(0)" onclick="linkliselelct('ListStorage')">返回</a>
</div>
